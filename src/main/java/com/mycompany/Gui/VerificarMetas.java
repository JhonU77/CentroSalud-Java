/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.Gui;

import com.mycompany.Modelo.SesionUsuario;
import com.mycompany.Modelo.Conexion;
import com.mycompany.Modelo.ConsultasSql;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author farro
 */
public class VerificarMetas extends javax.swing.JDialog {

    /**
     * Creates new form VerificarMetas
     */
    public VerificarMetas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cargarMetas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMostrarMetas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableMostrarMetas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Personal", "Meta", "Atencion", "Fecha Inicio", "Fecha Fin", "Avance", "Progreso", "Estado"
            }
        ));
        jScrollPane1.setViewportView(tableMostrarMetas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 590, 190));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarMetas() {
        String correo = SesionUsuario.getCorreoUsuario();
        String dniPersonal = ConsultasSql.obtenerDniPersonalPorCorreo(correo);

        DefaultTableModel modelo = (DefaultTableModel) tableMostrarMetas.getModel();
        modelo.setRowCount(0);

        List<Object[]> metas = obtenerMetasDelPersonal(dniPersonal);

        for (Object[] fila : metas) {
            modelo.addRow(fila);
        }
    }
    
    public static List<Object[]> obtenerMetasDelPersonal(String dniPersonal) {
        List<Object[]> metas = new ArrayList<>();

        String sql = "SELECT p.Nombres_Personal + ' ' + p.ApellidoPaterno_Personal AS Personal, " +
                     "m.Cantidad_MetaExamen AS NumMeta, " +
                     "a.Desc_Atencion AS Atencion, " +
                     "m.FechaInicio_MetaExamen, m.FechaFin_MetaExamen, " +
                     "(SELECT COUNT(*) FROM Cita c WHERE c.DNI_Personal = m.DNI_Personal " +
                     "AND c.ID_Atencion = m.ID_Atencion AND c.Estado_Cita = 'Atendido' " +
                     "AND c.FechaAtencion_Cita BETWEEN m.FechaInicio_MetaExamen AND m.FechaFin_MetaExamen) AS Avance " +
                     "FROM MetaExamen m " +
                     "INNER JOIN Atencion a ON m.ID_Atencion = a.ID_Atencion " +
                     "INNER JOIN Personal p ON m.DNI_Personal = p.DNI_Personal " +
                     "WHERE m.DNI_Personal = ?";

        try (Connection con = Conexion.getConexion();
             PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setString(1, dniPersonal);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String personal = rs.getString("Personal");
                int numMeta = rs.getInt("NumMeta");
                String atencion = rs.getString("Atencion");
                Date fechaInicio = rs.getDate("FechaInicio_MetaExamen");
                Date fechaFin = rs.getDate("FechaFin_MetaExamen");
                int avance = rs.getInt("Avance");

                // Calcular porcentaje de progreso
                int progreso = (int) ((avance * 100.0) / numMeta);

                // Calcular estado
                LocalDate hoy = LocalDate.now();
                String estado;
                if (avance >= numMeta) {
                    estado = "Completado";
                } else if (hoy.isAfter(fechaFin.toLocalDate())) {
                    estado = "Incompleto";
                } else {
                    estado = "En progreso";
                }

                // Formato de fechas
                DateTimeFormatter formatoFecha = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                String fechaInicioStr = fechaInicio.toLocalDate().format(formatoFecha);
                String fechaFinStr = fechaFin.toLocalDate().format(formatoFecha);

                // Agregar fila con progreso entre avance y estado
                Object[] fila = { personal, numMeta, atencion, fechaInicioStr, fechaFinStr, avance, progreso + "%", estado };
                metas.add(fila);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return metas;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerificarMetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerificarMetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerificarMetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerificarMetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VerificarMetas dialog = new VerificarMetas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMostrarMetas;
    // End of variables declaration//GEN-END:variables
}

