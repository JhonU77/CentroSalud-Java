/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.Gui;

import com.mycompany.Modelo.Conexion;
import com.mycompany.Modelo.ConsultasSql;
import com.mycompany.Modelo.Encriptador;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author farro
 */
public class GestionarPersonal extends javax.swing.JFrame {

    /**
     * Creates new form GestionarPersonal
     */
    public GestionarPersonal() {
        initComponents();
        ConsultasSql.cargarProfesiones(cmbProfesion);
        ConsultasSql.cargarColegio(cmbColegio);
        ConsultasSql.cargarEstablecimiento(cmbEstablecimiento);
        cargarTablaPersonal(jTablePersonal);
        listarUsuarios(jtableUsuarios);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersonal = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        txtApellidoP = new javax.swing.JTextField();
        txtApellidoM = new javax.swing.JTextField();
        txtDni = new javax.swing.JTextField();
        jCombGenero = new javax.swing.JComboBox<>();
        cmbProfesion = new javax.swing.JComboBox<>();
        jDateFechaNacimiento = new com.toedter.calendar.JDateChooser();
        bttAgregar = new javax.swing.JButton();
        bttEliminar = new javax.swing.JButton();
        bttModificar = new javax.swing.JButton();
        bttLimpiar = new javax.swing.JButton();
        cmbColegio = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtCodigoColegiatura = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        cmbEstablecimiento = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jtxtDni = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jtxtCorreo = new javax.swing.JTextField();
        jpassContrasena = new javax.swing.JPasswordField();
        jLabel16 = new javax.swing.JLabel();
        jbttRegistrar = new javax.swing.JButton();
        jbttEliminar = new javax.swing.JButton();
        jCombCargo = new javax.swing.JComboBox<>();
        jbttValidar = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jtxtNombres = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jtxtApellidoM = new javax.swing.JTextField();
        jtxtApellidoP = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtableUsuarios = new javax.swing.JTable();
        jbttModificar = new javax.swing.JButton();
        jtxtProfesion = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jbttActualizar = new javax.swing.JButton();
        jbttLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTablePersonal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablePersonal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePersonalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePersonal);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 640, 120));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Gestion de Personal");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 190, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("DNI:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 20));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Nombres:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 20));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Apellido Paterno:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, 20));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Apellido Materno:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Fecha Nacimiento:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Codigo Colegiatura:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, 20));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Establecimiento de trabajo:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, -1, 20));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Profesi√≥n:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, 20));
        jPanel1.add(txtNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 190, -1));
        jPanel1.add(txtApellidoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 160, -1));
        jPanel1.add(txtApellidoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 160, -1));
        jPanel1.add(txtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 130, -1));

        jCombGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F" }));
        jPanel1.add(jCombGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 90, -1));

        jPanel1.add(cmbProfesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 170, -1));
        jPanel1.add(jDateFechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 130, -1));

        bttAgregar.setBackground(new java.awt.Color(0, 0, 102));
        bttAgregar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        bttAgregar.setForeground(new java.awt.Color(255, 255, 255));
        bttAgregar.setText("Agregar");
        bttAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(bttAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, 110, -1));

        bttEliminar.setBackground(new java.awt.Color(102, 0, 0));
        bttEliminar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        bttEliminar.setForeground(new java.awt.Color(255, 255, 255));
        bttEliminar.setText("Eliminar");
        bttEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(bttEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 110, -1));

        bttModificar.setBackground(new java.awt.Color(0, 102, 102));
        bttModificar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        bttModificar.setForeground(new java.awt.Color(255, 255, 255));
        bttModificar.setText("Modificar");
        bttModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttModificarActionPerformed(evt);
            }
        });
        jPanel1.add(bttModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 130, 110, -1));

        bttLimpiar.setBackground(new java.awt.Color(102, 102, 0));
        bttLimpiar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        bttLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        bttLimpiar.setText("Limpiar");
        bttLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(bttLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 210, 110, -1));

        jPanel1.add(cmbColegio, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, 170, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Genero:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, 20));
        jPanel1.add(txtCodigoColegiatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 110, -1));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Colegiatura:");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, 20));

        jPanel1.add(cmbEstablecimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 290, -1));

        jTabbedPane1.addTab("Gestionar Personal", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setDoubleBuffered(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 102));
        jLabel11.setText("Gestionar Usuario");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 180, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("DNI:");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));
        jPanel2.add(jtxtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 150, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Correo:");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, 20));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Contrase√±a:");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, 20));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Rol:");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 30, 20));
        jPanel2.add(jtxtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 280, -1));
        jPanel2.add(jpassContrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 160, -1));

        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Para crear un usuario asegurese de que el documento de  identidad del empleado se encuentre registrado.");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 570, -1));

        jbttRegistrar.setBackground(new java.awt.Color(0, 0, 102));
        jbttRegistrar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jbttRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        jbttRegistrar.setText("Registrar");
        jbttRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbttRegistrarActionPerformed(evt);
            }
        });
        jPanel2.add(jbttRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, 110, -1));

        jbttEliminar.setBackground(new java.awt.Color(102, 0, 0));
        jbttEliminar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jbttEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jbttEliminar.setText("Eliminar");
        jbttEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbttEliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jbttEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 180, 110, -1));

        jCombCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Jefe de Area", "Usuario Limitado" }));
        jPanel2.add(jCombCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 210, -1));

        jbttValidar.setBackground(new java.awt.Color(0, 102, 0));
        jbttValidar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jbttValidar.setForeground(new java.awt.Color(255, 255, 255));
        jbttValidar.setText("Validar");
        jbttValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbttValidarActionPerformed(evt);
            }
        });
        jPanel2.add(jbttValidar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, -1, -1));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Nombres:");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, 20));
        jPanel2.add(jtxtNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 190, -1));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Apellido Paterno:");
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, 20));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Apellido Materno:");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, 20));
        jPanel2.add(jtxtApellidoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 180, -1));
        jPanel2.add(jtxtApellidoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 180, -1));

        jtableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtableUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableUsuariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtableUsuarios);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 640, 170));

        jbttModificar.setBackground(new java.awt.Color(0, 102, 102));
        jbttModificar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jbttModificar.setForeground(new java.awt.Color(255, 255, 255));
        jbttModificar.setText("Modificar");
        jbttModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbttModificarActionPerformed(evt);
            }
        });
        jPanel2.add(jbttModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 140, 110, -1));
        jPanel2.add(jtxtProfesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 170, -1));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Profesi√≥n:");
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        jbttActualizar.setBackground(new java.awt.Color(51, 0, 51));
        jbttActualizar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jbttActualizar.setForeground(new java.awt.Color(255, 255, 255));
        jbttActualizar.setText("Actualizar");
        jbttActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbttActualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jbttActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 280, 110, -1));

        jbttLimpiar.setBackground(new java.awt.Color(102, 102, 0));
        jbttLimpiar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jbttLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        jbttLimpiar.setText("Limpiar");
        jbttLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbttLimpiarActionPerformed(evt);
            }
        });
        jPanel2.add(jbttLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 220, 110, -1));

        jTabbedPane1.addTab("Gestionar Usuario", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTablePersonalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePersonalMouseClicked
        int filaSeleccionada = jTablePersonal.getSelectedRow();
        if (filaSeleccionada != -1) {
            String dni = jTablePersonal.getValueAt(filaSeleccionada, 0).toString();
            String nombres = jTablePersonal.getValueAt(filaSeleccionada, 1).toString();
            String apellidoP = jTablePersonal.getValueAt(filaSeleccionada, 2).toString();
            String apellidoM = jTablePersonal.getValueAt(filaSeleccionada, 3).toString();
            Object fechaObj = jTablePersonal.getValueAt(filaSeleccionada, 4);
            java.util.Date fechaNac = null;
            if (fechaObj instanceof java.util.Date) {
                fechaNac = (java.util.Date) fechaObj;
            } else {
                try {
                    fechaNac = new SimpleDateFormat("yyyy-MM-dd").parse(fechaObj.toString());
                } catch (ParseException e) {
                    e.printStackTrace();
                }
            }

            String genero = jTablePersonal.getValueAt(filaSeleccionada, 5).toString();
            String codcolegiatura = jTablePersonal.getValueAt(filaSeleccionada, 6).toString();
            String colegio = jTablePersonal.getValueAt(filaSeleccionada, 7).toString();
            String profesion = jTablePersonal.getValueAt(filaSeleccionada, 8).toString();
            String establecimiento = jTablePersonal.getValueAt(filaSeleccionada, 9).toString();

            //Object estObj = jTablePersonal.getValueAt(filaSeleccionada, 9);
            //String establecimiento = (estObj != null) ? estObj.toString() : "Sin asignar";

            txtDni.setText(dni);
            txtNombres.setText(nombres);
            txtApellidoP.setText(apellidoP);
            txtApellidoM.setText(apellidoM);
            jDateFechaNacimiento.setDate(fechaNac);
            jCombGenero.setSelectedItem(genero);
            txtCodigoColegiatura.setText(codcolegiatura);
            cmbColegio.setSelectedItem(colegio);
            cmbProfesion.setSelectedItem(profesion);
            cmbEstablecimiento.setSelectedItem(establecimiento);
        }
    }//GEN-LAST:event_jTablePersonalMouseClicked

    private void bttAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttAgregarActionPerformed
        String dni = txtDni.getText().trim();
        String nombres = txtNombres.getText().trim();
        String apellidoP = txtApellidoP.getText().trim();
        String apellidoM = txtApellidoM.getText().trim();
        java.util.Date utilDate = jDateFechaNacimiento.getDate();
        java.sql.Date sqlDate = null;

        if (utilDate != null) {
            sqlDate = new java.sql.Date(utilDate.getTime());
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha de nacimiento");
            return;
        }

        String genero = "";
        if (jCombGenero.getSelectedItem() != null) {
            genero = jCombGenero.getSelectedItem().toString();
            if (!genero.equals("M") && !genero.equals("F")) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un g√©nero v√°lido (M o F)");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un g√©nero");
            return;
        }

        String profesionDesc = cmbProfesion.getSelectedItem().toString();
        String codcolegiatura = txtCodigoColegiatura.getText().trim();
        String colegioDesc = cmbColegio.getSelectedItem().toString();
        String establecimientoNombre = cmbEstablecimiento.getSelectedItem().toString();
        int idProfesion = ConsultasSql.obtenerIdProfesion(profesionDesc);
        int idColegio = ConsultasSql.obtenerIdColegio(colegioDesc);
        int idEstablecimiento = ConsultasSql.obtenerIdEstablecimiento(establecimientoNombre);

        if (idProfesion == -1 || idColegio == -1) {
            JOptionPane.showMessageDialog(null, "Error al obtener profesi√≥n o colegio.");
            return;
        }

        String sqlInsert = "INSERT INTO Personal (DNI_Personal, Nombres_Personal, ApellidoPaterno_Personal, ApellidoMaterno_Personal, FechaNacimiento_Personal, Genero_Personal, Codigo_Colegiatura, ID_Colegio, ID_Profesion, ID_Establecimiento) "
        + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

        try (Connection con = Conexion.getConexion();
            PreparedStatement pst = con.prepareStatement(sqlInsert)) {

            pst.setString(1, dni);
            pst.setString(2, nombres);
            pst.setString(3, apellidoP);
            pst.setString(4, apellidoM);
            pst.setDate(5, sqlDate);
            pst.setString(6, genero);
            pst.setString(7, codcolegiatura);
            pst.setInt(8, idColegio);
            pst.setInt(9, idProfesion);
            pst.setInt(10, idEstablecimiento);

            int res = pst.executeUpdate();

            if (res > 0) {
                JOptionPane.showMessageDialog(null, "Registro agregado correctamente.");
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo agregar el registro.");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error en la base de datos: " + e.getMessage());
        }
        cargarTablaPersonal(jTablePersonal);
    }//GEN-LAST:event_bttAgregarActionPerformed

    private void bttEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttEliminarActionPerformed
        String dni = txtDni.getText();

        if (dni.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione un registro para eliminar");
            return;
        }

        int confirmar = JOptionPane.showConfirmDialog(null, "¬øEst√° seguro de eliminar este registro?", "Confirmar eliminaci√≥n", JOptionPane.YES_NO_OPTION);

        if (confirmar == JOptionPane.YES_OPTION) {
            String sql = "DELETE FROM Personal WHERE DNI_Personal=?";

            try (Connection con = Conexion.getConexion();
                PreparedStatement ps = con.prepareStatement(sql)) {

                ps.setString(1, dni);

                int res = ps.executeUpdate();

                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Registro eliminado");
                    limpiarCamposTB1();
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo eliminar");
                }

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error SQL: " + e.getMessage());
            }
        }
        cargarTablaPersonal(jTablePersonal);
    }//GEN-LAST:event_bttEliminarActionPerformed

    private void bttModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttModificarActionPerformed
        String dni = txtDni.getText();
        String nombres = txtNombres.getText();
        String apellidoP = txtApellidoP.getText();
        String apellidoM = txtApellidoM.getText();
        java.util.Date fechaNacimiento = jDateFechaNacimiento.getDate();
        String genero = jCombGenero.getSelectedItem().toString();
        String codcolegiatura = txtCodigoColegiatura.getText();
        String colegio = cmbColegio.getSelectedItem().toString();
        String profesion = cmbProfesion.getSelectedItem().toString();
        String establecimientoNombre = cmbEstablecimiento.getSelectedItem().toString();
        if (dni.isEmpty() || nombres.isEmpty()) {
            JOptionPane.showMessageDialog(null, "DNI y Nombres son obligatorios");
            return;
        }
        int idColegio = ConsultasSql.obtenerIdColegio(colegio);
        int idProfesion = ConsultasSql.obtenerIdProfesion(profesion);
        int idEstablecimiento = ConsultasSql.obtenerIdEstablecimiento(establecimientoNombre);
        java.sql.Date fechaSQL = new java.sql.Date(fechaNacimiento.getTime());

        String sql = "UPDATE Personal SET Nombres_Personal=?, ApellidoPaterno_Personal=?, ApellidoMaterno_Personal=?, FechaNacimiento_Personal=?, Genero_Personal=?, Codigo_Colegiatura=?, ID_Colegio=?, ID_Profesion=?, ID_Establecimiento=? WHERE DNI_Personal=?";

        try (Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setString(1, nombres);
            ps.setString(2, apellidoP);
            ps.setString(3, apellidoM);
            ps.setDate(4, fechaSQL);
            ps.setString(5, genero);
            ps.setString(6, codcolegiatura);
            ps.setInt(7, idColegio);
            ps.setInt(8, idProfesion);
            ps.setInt(9, idEstablecimiento);
            ps.setString(10, dni);

            int res = ps.executeUpdate();

            if (res > 0) {
                JOptionPane.showMessageDialog(null, "Registro modificado con √©xito");
            } else {
                JOptionPane.showMessageDialog(null, "Error al modificar registro");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error SQL: " + e.getMessage());
        }
        cargarTablaPersonal(jTablePersonal);
    }//GEN-LAST:event_bttModificarActionPerformed

    private void bttLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttLimpiarActionPerformed
        limpiarCamposTB1();
    }//GEN-LAST:event_bttLimpiarActionPerformed

    private void jbttRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbttRegistrarActionPerformed
        String dni = jtxtDni.getText().trim();
        String correo = jtxtCorreo.getText().trim();
        String contrase√±a = new String(jpassContrasena.getPassword()).trim();
        String cargo = jCombCargo.getSelectedItem().toString();

        if (dni.isEmpty() || correo.isEmpty() || contrase√±a.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos.");
            return;
        }

        if (!correo.contains("@")) {
            JOptionPane.showMessageDialog(null, "Correo inv√°lido. Debe contener '@'.");
            return;
        }

        String contrase√±aCifrada = Encriptador.encriptarSHA256(contrase√±a);
        if (contrase√±aCifrada == null) {
            JOptionPane.showMessageDialog(null, "Error al cifrar la contrase√±a.");
            return;
        }

        try (Connection con = Conexion.getConexion()) {
            String sql = "INSERT INTO Usuario (Correo, Contrase√±a, Rol, DNI_Personal) VALUES (?, ?, ?, ?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, correo);
            ps.setString(2, contrase√±aCifrada);
            ps.setString(3, cargo);
            ps.setString(4, dni);

            int filas = ps.executeUpdate();
            if (filas > 0) {
                JOptionPane.showMessageDialog(null, "Usuario agregado correctamente.");
                limpiarCamposTB2();
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo agregar el usuario.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error en la base de datos: " + e.getMessage());
        }
    }//GEN-LAST:event_jbttRegistrarActionPerformed

    private void jbttEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbttEliminarActionPerformed
        String dni = jtxtDni.getText().trim();

        if (dni.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar o seleccionar un DNI.");
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro de eliminar este usuario?", "Confirmar eliminaci√≥n", JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            String sql = "DELETE FROM Usuario WHERE DNI_Personal = ?";

            try (Connection con = Conexion.getConexion();
                PreparedStatement ps = con.prepareStatement(sql)) {

                ps.setString(1, dni);
                int filas = ps.executeUpdate();

                if (filas > 0) {
                    JOptionPane.showMessageDialog(null, "Usuario eliminado correctamente.");
                    limpiarCamposTB2();
                    listarUsuarios(jtableUsuarios);
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontr√≥ un usuario con ese DNI.");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al eliminar usuario: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jbttEliminarActionPerformed

    private void jbttValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbttValidarActionPerformed
        String dni = jtxtDni.getText().trim();

        if (dni.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un DNI.");
            return;
        }

        String sql = "SELECT p.Nombres_Personal, p.ApellidoPaterno_Personal, p.ApellidoMaterno_Personal, pr.Desc_Profesion " +
        "FROM Personal p " +
        "JOIN Profesion pr ON p.ID_Profesion = pr.ID_Profesion " +
        "WHERE p.DNI_Personal = ?";

        try (Connection con = Conexion.getConexion();
            PreparedStatement pst = con.prepareStatement(sql)) {

            pst.setString(1, dni);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                jtxtNombres.setText(rs.getString("Nombres_Personal"));
                jtxtApellidoP.setText(rs.getString("ApellidoPaterno_Personal"));
                jtxtApellidoM.setText(rs.getString("ApellidoMaterno_Personal"));
                jtxtProfesion.setText(rs.getString("Desc_Profesion"));
            } else {
                JOptionPane.showMessageDialog(null, "El DNI no se encuentra registrado.");
                jtxtDni.setText("");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al validar el DNI: " + e.getMessage());
        }
        listarUsuarios(jtableUsuarios);
    }//GEN-LAST:event_jbttValidarActionPerformed

    private void jtableUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableUsuariosMouseClicked
        int fila = jtableUsuarios.getSelectedRow();

        if (fila >= 0) {
            jtxtDni.setText(jtableUsuarios.getValueAt(fila, 3).toString());
            jtxtNombres.setText(jtableUsuarios.getValueAt(fila, 4).toString());
            jtxtApellidoP.setText(jtableUsuarios.getValueAt(fila, 5).toString());
            jtxtApellidoM.setText(jtableUsuarios.getValueAt(fila, 6).toString());
            jtxtProfesion.setText(jtableUsuarios.getValueAt(fila, 7).toString());
            jtxtCorreo.setText(jtableUsuarios.getValueAt(fila, 1).toString());
            jCombCargo.setSelectedItem(jtableUsuarios.getValueAt(fila, 2).toString());
            jpassContrasena.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una fila v√°lida.");
        }
    }//GEN-LAST:event_jtableUsuariosMouseClicked

    private void jbttModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbttModificarActionPerformed
        String dni = jtxtDni.getText().trim();
        String nuevaContrasena = new String(jpassContrasena.getPassword());
        String nuevoCargo = (String) jCombCargo.getSelectedItem();

        if (dni.isEmpty() || nuevaContrasena.isEmpty() || nuevoCargo == null) {
            JOptionPane.showMessageDialog(null, "Debe completar todos los campos.");
            return;
        }

        String contrasenaCifrada = com.mycompany.Modelo.Encriptador.encriptarSHA256(nuevaContrasena);

        String sql = "UPDATE Usuario SET Contrase√±a = ?, Rol = ? WHERE DNI_Personal = ?";

        try (Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setString(1, contrasenaCifrada);
            ps.setString(2, nuevoCargo);
            ps.setString(3, dni);

            int filasAfectadas = ps.executeUpdate();

            if (filasAfectadas > 0) {
                JOptionPane.showMessageDialog(null, "Usuario modificado correctamente.");
                limpiarCamposTB2();
                listarUsuarios(jtableUsuarios);
            } else {
                JOptionPane.showMessageDialog(null, "No se encontr√≥ el usuario con ese DNI.");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al modificar usuario: " + e.getMessage());
        }
    }//GEN-LAST:event_jbttModificarActionPerformed

    private void jbttActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbttActualizarActionPerformed
        listarUsuarios(jtableUsuarios);
    }//GEN-LAST:event_jbttActualizarActionPerformed

    private void jbttLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbttLimpiarActionPerformed
        limpiarCamposTB2();
    }//GEN-LAST:event_jbttLimpiarActionPerformed

    public void cargarTablaPersonal(JTable jTablePersonal) {
        String[] columnas = {"DNI", "Nombres", "Apellido Paterno", "Apellido Materno", "Fecha Nac.", "G√©nero", "Cod. Colegiatura", "Colegio", "Profesi√≥n", "Establecimiento"};
        DefaultTableModel modelo = new DefaultTableModel(null, columnas);

        String sql = "SELECT p.DNI_Personal, p.Nombres_Personal, p.ApellidoPaterno_Personal, " +
                     "p.ApellidoMaterno_Personal, p.FechaNacimiento_Personal, p.Genero_Personal, p.Codigo_Colegiatura, " +
                     "c.Desc_Colegio, pr.Desc_Profesion, e.Nombre_Establecimiento " +
                     "FROM Personal p " +
                     "JOIN Colegio c ON p.ID_Colegio = c.ID_Colegio " +
                     "JOIN Profesion pr ON p.ID_Profesion = pr.ID_Profesion " +
                     "LEFT JOIN Establecimiento e ON p.ID_Establecimiento = e.ID_Establecimiento";

        try (Connection con = Conexion.getConexion();
             Statement st = con.createStatement();
             ResultSet rs = st.executeQuery(sql)) {

            while (rs.next()) {
                Object[] fila = new Object[10];
                fila[0] = rs.getString("DNI_Personal");
                fila[1] = rs.getString("Nombres_Personal");
                fila[2] = rs.getString("ApellidoPaterno_Personal");
                fila[3] = rs.getString("ApellidoMaterno_Personal");
                fila[4] = rs.getDate("FechaNacimiento_Personal");
                fila[5] = rs.getString("Genero_Personal");
                fila[6] = rs.getString("Codigo_Colegiatura");
                fila[7] = rs.getString("Desc_Colegio");
                fila[8] = rs.getString("Desc_Profesion");
                fila[9] = rs.getString("Nombre_Establecimiento");
                modelo.addRow(fila);
            }

            jTablePersonal.setModel(modelo);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar datos en la tabla: " + e.getMessage());
        }
    }
    
    public void listarUsuarios(JTable jtableUsuarios) {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Correo");
        modelo.addColumn("Rol");
        modelo.addColumn("DNI");
        modelo.addColumn("Nombres");
        modelo.addColumn("Apellido P.");
        modelo.addColumn("Apellido M.");
        modelo.addColumn("Profesi√≥n");

        String sql = "SELECT u.ID_Usuario, u.Correo, u.Rol, p.DNI_Personal, " +
                     "p.Nombres_Personal, p.ApellidoPaterno_Personal, p.ApellidoMaterno_Personal, pr.Desc_Profesion " +
                     "FROM Usuario u " +
                     "INNER JOIN Personal p ON u.DNI_Personal = p.DNI_Personal " +
                     "INNER JOIN Profesion pr ON p.ID_Profesion = pr.ID_Profesion";

        try (Connection con = Conexion.getConexion(); 
             Statement st = con.createStatement(); 
             ResultSet rs = st.executeQuery(sql)) {

            while (rs.next()) {
                Object[] fila = {
                    rs.getInt("ID_Usuario"),
                    rs.getString("Correo"),
                    rs.getString("Rol"),
                    rs.getString("DNI_Personal"),
                    rs.getString("Nombres_Personal"),
                    rs.getString("ApellidoPaterno_Personal"),
                    rs.getString("ApellidoMaterno_Personal"),
                    rs.getString("Desc_Profesion")
                };
                modelo.addRow(fila);
            }

            jtableUsuarios.setModel(modelo);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al listar usuarios: " + e.getMessage());
        }
    }
    
    private void limpiarCamposTB1(){
        txtDni.setText("");
        txtNombres.setText("");
        txtApellidoP.setText("");
        txtApellidoM.setText("");
        jDateFechaNacimiento.setDate(null);
        jCombGenero.setSelectedIndex(-1);
        txtCodigoColegiatura.setText("");
        cmbColegio.setSelectedIndex(-1);
        cmbProfesion.setSelectedIndex(-1);
        cmbEstablecimiento.setSelectedItem(-1);
    }
    private void limpiarCamposTB2() {
        jtxtDni.setText("");
        jtxtNombres.setText("");
        jtxtApellidoP.setText("");
        jtxtApellidoM.setText("");
        jtxtProfesion.setText("");
        jtxtCorreo.setText("");
        jpassContrasena.setText("");
        jCombCargo.setSelectedIndex(0);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionarPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionarPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionarPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionarPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionarPersonal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttAgregar;
    private javax.swing.JButton bttEliminar;
    private javax.swing.JButton bttLimpiar;
    private javax.swing.JButton bttModificar;
    private javax.swing.JComboBox<String> cmbColegio;
    private javax.swing.JComboBox<String> cmbEstablecimiento;
    private javax.swing.JComboBox<String> cmbProfesion;
    private javax.swing.JComboBox<String> jCombCargo;
    private javax.swing.JComboBox<String> jCombGenero;
    private com.toedter.calendar.JDateChooser jDateFechaNacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTablePersonal;
    private javax.swing.JButton jbttActualizar;
    private javax.swing.JButton jbttEliminar;
    private javax.swing.JButton jbttLimpiar;
    private javax.swing.JButton jbttModificar;
    private javax.swing.JButton jbttRegistrar;
    private javax.swing.JButton jbttValidar;
    private javax.swing.JPasswordField jpassContrasena;
    private javax.swing.JTable jtableUsuarios;
    private javax.swing.JTextField jtxtApellidoM;
    private javax.swing.JTextField jtxtApellidoP;
    private javax.swing.JTextField jtxtCorreo;
    private javax.swing.JTextField jtxtDni;
    private javax.swing.JTextField jtxtNombres;
    private javax.swing.JTextField jtxtProfesion;
    private javax.swing.JTextField txtApellidoM;
    private javax.swing.JTextField txtApellidoP;
    private javax.swing.JTextField txtCodigoColegiatura;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
